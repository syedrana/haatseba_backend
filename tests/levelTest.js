const mongoose = require("mongoose");
const User = require("../models/userModel");
const { updateUserLevel } = require("../helper/levelHelper"); // ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ updateUserLevel ‡¶´‡¶æ‡¶á‡¶≤

// // üöÄ MongoDB connect
// async function connectDB() {
//   await mongoose.connect("mongodb://127.0.0.1:27017/mlm_test", {
//     useNewUrlParser: true,
//     useUnifiedTopology: true,
//   });
//   console.log("‚úÖ MongoDB Connected");
// }

// üß™ Test Function
async function runTest() {
  //await connectDB();

  // üîÑ ‡¶™‡ßÅ‡¶∞‡¶®‡ßã ‡¶°‡¶æ‡¶ü‡¶æ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶¶‡¶æ‡¶ì
  await User.deleteMany({});

  // Root User ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã
  const root = await User.create({
    firstName: "Root User",
    level: 0,
    children: [],
    referralLocked: false
  });

  console.log("üëâ Root user created:", root._id);

  // --- Step 1: ‡ß©‡¶ü‡¶æ child add ‡¶ï‡¶∞‡¶¨‡ßã ---
  const child1 = await User.create({ firstName: "Child 1", parentId: root._id, level: 0, children: [] });
  const child2 = await User.create({ firstName: "Child 2", parentId: root._id, level: 0, children: [] });
  const child3 = await User.create({ firstName: "Child 3", parentId: root._id, level: 0, children: [] });

  // root-‡¶è‡¶∞ children ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ
  root.children = [child1._id, child2._id, child3._id];
  await root.save();

  console.log("üëâ ‡ß©‡¶ü‡¶æ child add ‡¶π‡¶≤‡ßã");

  // --- Step 2: root ‡¶è‡¶∞ ‡¶≤‡ßá‡¶≠‡ßá‡¶≤ update check ---
  await updateUserLevel(root._id);

  const updatedRoot1 = await User.findById(root._id);
  console.log("‚úÖ Root-‡¶è‡¶∞ ‡¶≤‡ßá‡¶≠‡ßá‡¶≤ (‡ß© child add ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞):", updatedRoot1.level);

  // --- Step 3: ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï‡¶ü‡¶æ child ‡¶ï‡ßá level 1 ‡¶ï‡¶∞‡¶¨‡ßã ---
  child1.level = 1; await child1.save();
  child2.level = 1; await child2.save();
  child3.level = 1; await child3.save();

  console.log("üëâ ‡¶∏‡¶¨ child ‡¶è‡¶ñ‡¶® level 1");

  // root ‡¶ï‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ check ‡¶ï‡¶∞‡¶æ
  await updateUserLevel(root._id);

  const updatedRoot2 = await User.findById(root._id);
  console.log("‚úÖ Root-‡¶è‡¶∞ ‡¶≤‡ßá‡¶≠‡ßá‡¶≤ (child ‡¶ó‡ßÅ‡¶≤‡ßã 1 ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶™‡¶∞):", updatedRoot2.level);

  mongoose.connection.close();
}

// Run Test
runTest();


module.exports = {runTest};